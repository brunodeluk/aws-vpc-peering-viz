name: "Release workflow"
on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release/')
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    - name: zip artifact
      run: zip vpcpeeringviz.zip vpcpeeringviz

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: vpcpeeringviz
        path: vpcpeeringviz.zip
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: echo branch name
      run: echo ${{github.head_ref}}
    - name: echo is merged
      run: echo ${{github.event.pull_request.merged}}
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: vpcpeeringviz
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${GITHUB_REF###*/}
        release_name: Release ${GITHUB_REF###*/}
    - name: Upload release
      id: upload_release_asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./vpcpeeringviz.zip
        asset_name: ${GITHUB_REF###*/}.zip
        asset_content_type: application/zip
